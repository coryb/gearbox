#!/usr/bin/env perl
use lib $ENV{PWD}."/".($0 =~ m{(.*)/[^/]+$})[0];
use strict;
use warnings;
use setup;
use Test::Trivial (tests => 494);

use Gearbox::Errors;
my ($err, $bycode);

OK $err = new ERR_MULTIPLE_CHOICES("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 300;
IS $err->name() => "MULTIPLE_CHOICES";
IS $err->msg()  => "ERR_MULTIPLE_CHOICES: err";
IS THROWS { die $err } => "ERR_MULTIPLE_CHOICES: err";
OK $bycode = new ERR_CODE_300("err");
OK UNIVERSAL::isa($bycode, "ERR_MULTIPLE_CHOICES");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 300;
IS $bycode->name() => "MULTIPLE_CHOICES";
IS $bycode->msg()  => "ERR_MULTIPLE_CHOICES: err";
IS THROWS { die $bycode } => "ERR_MULTIPLE_CHOICES: err";

OK $err = new ERR_MOVED_PERMANENTLY("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 301;
IS $err->name() => "MOVED_PERMANENTLY";
IS $err->msg()  => "ERR_MOVED_PERMANENTLY: err";
IS THROWS { die $err } => "ERR_MOVED_PERMANENTLY: err";
OK $bycode = new ERR_CODE_301("err");
OK UNIVERSAL::isa($bycode, "ERR_MOVED_PERMANENTLY");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 301;
IS $bycode->name() => "MOVED_PERMANENTLY";
IS $bycode->msg()  => "ERR_MOVED_PERMANENTLY: err";
IS THROWS { die $bycode } => "ERR_MOVED_PERMANENTLY: err";

OK $err = new ERR_MOVED_TEMPORARILY("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 302;
IS $err->name() => "MOVED_TEMPORARILY";
IS $err->msg()  => "ERR_MOVED_TEMPORARILY: err";
IS THROWS { die $err } => "ERR_MOVED_TEMPORARILY: err";
OK $bycode = new ERR_CODE_302("err");
OK UNIVERSAL::isa($bycode, "ERR_MOVED_TEMPORARILY");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 302;
IS $bycode->name() => "MOVED_TEMPORARILY";
IS $bycode->msg()  => "ERR_MOVED_TEMPORARILY: err";
IS THROWS { die $bycode } => "ERR_MOVED_TEMPORARILY: err";

OK $err = new ERR_SEE_OTHER("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 303;
IS $err->name() => "SEE_OTHER";
IS $err->msg()  => "ERR_SEE_OTHER: err";
IS THROWS { die $err } => "ERR_SEE_OTHER: err";
OK $bycode = new ERR_CODE_303("err");
OK UNIVERSAL::isa($bycode, "ERR_SEE_OTHER");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 303;
IS $bycode->name() => "SEE_OTHER";
IS $bycode->msg()  => "ERR_SEE_OTHER: err";
IS THROWS { die $bycode } => "ERR_SEE_OTHER: err";

OK $err = new ERR_NOT_MODIFIED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 304;
IS $err->name() => "NOT_MODIFIED";
IS $err->msg()  => "ERR_NOT_MODIFIED: err";
IS THROWS { die $err } => "ERR_NOT_MODIFIED: err";
OK $bycode = new ERR_CODE_304("err");
OK UNIVERSAL::isa($bycode, "ERR_NOT_MODIFIED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 304;
IS $bycode->name() => "NOT_MODIFIED";
IS $bycode->msg()  => "ERR_NOT_MODIFIED: err";
IS THROWS { die $bycode } => "ERR_NOT_MODIFIED: err";

OK $err = new ERR_USE_PROXY("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 305;
IS $err->name() => "USE_PROXY";
IS $err->msg()  => "ERR_USE_PROXY: err";
IS THROWS { die $err } => "ERR_USE_PROXY: err";
OK $bycode = new ERR_CODE_305("err");
OK UNIVERSAL::isa($bycode, "ERR_USE_PROXY");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 305;
IS $bycode->name() => "USE_PROXY";
IS $bycode->msg()  => "ERR_USE_PROXY: err";
IS THROWS { die $bycode } => "ERR_USE_PROXY: err";

OK $err = new ERR_TEMPORARY_REDIRECT("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 307;
IS $err->name() => "TEMPORARY_REDIRECT";
IS $err->msg()  => "ERR_TEMPORARY_REDIRECT: err";
IS THROWS { die $err } => "ERR_TEMPORARY_REDIRECT: err";
OK $bycode = new ERR_CODE_307("err");
OK UNIVERSAL::isa($bycode, "ERR_TEMPORARY_REDIRECT");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 307;
IS $bycode->name() => "TEMPORARY_REDIRECT";
IS $bycode->msg()  => "ERR_TEMPORARY_REDIRECT: err";
IS THROWS { die $bycode } => "ERR_TEMPORARY_REDIRECT: err";

OK $err = new ERR_BAD_REQUEST("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 400;
IS $err->name() => "BAD_REQUEST";
IS $err->msg()  => "ERR_BAD_REQUEST: err";
IS THROWS { die $err } => "ERR_BAD_REQUEST: err";
OK $bycode = new ERR_CODE_400("err");
OK UNIVERSAL::isa($bycode, "ERR_BAD_REQUEST");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 400;
IS $bycode->name() => "BAD_REQUEST";
IS $bycode->msg()  => "ERR_BAD_REQUEST: err";
IS THROWS { die $bycode } => "ERR_BAD_REQUEST: err";

OK $err = new ERR_UNAUTHORIZED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 401;
IS $err->name() => "UNAUTHORIZED";
IS $err->msg()  => "ERR_UNAUTHORIZED: err";
IS THROWS { die $err } => "ERR_UNAUTHORIZED: err";
OK $bycode = new ERR_CODE_401("err");
OK UNIVERSAL::isa($bycode, "ERR_UNAUTHORIZED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 401;
IS $bycode->name() => "UNAUTHORIZED";
IS $bycode->msg()  => "ERR_UNAUTHORIZED: err";
IS THROWS { die $bycode } => "ERR_UNAUTHORIZED: err";

OK $err = new ERR_PAYMENT_REQUIRED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 402;
IS $err->name() => "PAYMENT_REQUIRED";
IS $err->msg()  => "ERR_PAYMENT_REQUIRED: err";
IS THROWS { die $err } => "ERR_PAYMENT_REQUIRED: err";
OK $bycode = new ERR_CODE_402("err");
OK UNIVERSAL::isa($bycode, "ERR_PAYMENT_REQUIRED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 402;
IS $bycode->name() => "PAYMENT_REQUIRED";
IS $bycode->msg()  => "ERR_PAYMENT_REQUIRED: err";
IS THROWS { die $bycode } => "ERR_PAYMENT_REQUIRED: err";

OK $err = new ERR_FORBIDDEN("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 403;
IS $err->name() => "FORBIDDEN";
IS $err->msg()  => "ERR_FORBIDDEN: err";
IS THROWS { die $err } => "ERR_FORBIDDEN: err";
OK $bycode = new ERR_CODE_403("err");
OK UNIVERSAL::isa($bycode, "ERR_FORBIDDEN");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 403;
IS $bycode->name() => "FORBIDDEN";
IS $bycode->msg()  => "ERR_FORBIDDEN: err";
IS THROWS { die $bycode } => "ERR_FORBIDDEN: err";

OK $err = new ERR_NOT_FOUND("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 404;
IS $err->name() => "NOT_FOUND";
IS $err->msg()  => "ERR_NOT_FOUND: err";
IS THROWS { die $err } => "ERR_NOT_FOUND: err";
OK $bycode = new ERR_CODE_404("err");
OK UNIVERSAL::isa($bycode, "ERR_NOT_FOUND");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 404;
IS $bycode->name() => "NOT_FOUND";
IS $bycode->msg()  => "ERR_NOT_FOUND: err";
IS THROWS { die $bycode } => "ERR_NOT_FOUND: err";

OK $err = new ERR_METHOD_NOT_ALLOWED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 405;
IS $err->name() => "METHOD_NOT_ALLOWED";
IS $err->msg()  => "ERR_METHOD_NOT_ALLOWED: err";
IS THROWS { die $err } => "ERR_METHOD_NOT_ALLOWED: err";
OK $bycode = new ERR_CODE_405("err");
OK UNIVERSAL::isa($bycode, "ERR_METHOD_NOT_ALLOWED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 405;
IS $bycode->name() => "METHOD_NOT_ALLOWED";
IS $bycode->msg()  => "ERR_METHOD_NOT_ALLOWED: err";
IS THROWS { die $bycode } => "ERR_METHOD_NOT_ALLOWED: err";

OK $err = new ERR_NOT_ACCEPTABLE("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 406;
IS $err->name() => "NOT_ACCEPTABLE";
IS $err->msg()  => "ERR_NOT_ACCEPTABLE: err";
IS THROWS { die $err } => "ERR_NOT_ACCEPTABLE: err";
OK $bycode = new ERR_CODE_406("err");
OK UNIVERSAL::isa($bycode, "ERR_NOT_ACCEPTABLE");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 406;
IS $bycode->name() => "NOT_ACCEPTABLE";
IS $bycode->msg()  => "ERR_NOT_ACCEPTABLE: err";
IS THROWS { die $bycode } => "ERR_NOT_ACCEPTABLE: err";

OK $err = new ERR_PROXY_AUTHENTICATION_REQUIRED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 407;
IS $err->name() => "PROXY_AUTHENTICATION_REQUIRED";
IS $err->msg()  => "ERR_PROXY_AUTHENTICATION_REQUIRED: err";
IS THROWS { die $err } => "ERR_PROXY_AUTHENTICATION_REQUIRED: err";
OK $bycode = new ERR_CODE_407("err");
OK UNIVERSAL::isa($bycode, "ERR_PROXY_AUTHENTICATION_REQUIRED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 407;
IS $bycode->name() => "PROXY_AUTHENTICATION_REQUIRED";
IS $bycode->msg()  => "ERR_PROXY_AUTHENTICATION_REQUIRED: err";
IS THROWS { die $bycode } => "ERR_PROXY_AUTHENTICATION_REQUIRED: err";

OK $err = new ERR_REQUEST_TIME_OUT("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 408;
IS $err->name() => "REQUEST_TIME_OUT";
IS $err->msg()  => "ERR_REQUEST_TIME_OUT: err";
IS THROWS { die $err } => "ERR_REQUEST_TIME_OUT: err";
OK $bycode = new ERR_CODE_408("err");
OK UNIVERSAL::isa($bycode, "ERR_REQUEST_TIME_OUT");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 408;
IS $bycode->name() => "REQUEST_TIME_OUT";
IS $bycode->msg()  => "ERR_REQUEST_TIME_OUT: err";
IS THROWS { die $bycode } => "ERR_REQUEST_TIME_OUT: err";

OK $err = new ERR_CONFLICT("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 409;
IS $err->name() => "CONFLICT";
IS $err->msg()  => "ERR_CONFLICT: err";
IS THROWS { die $err } => "ERR_CONFLICT: err";
OK $bycode = new ERR_CODE_409("err");
OK UNIVERSAL::isa($bycode, "ERR_CONFLICT");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 409;
IS $bycode->name() => "CONFLICT";
IS $bycode->msg()  => "ERR_CONFLICT: err";
IS THROWS { die $bycode } => "ERR_CONFLICT: err";

OK $err = new ERR_GONE("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 410;
IS $err->name() => "GONE";
IS $err->msg()  => "ERR_GONE: err";
IS THROWS { die $err } => "ERR_GONE: err";
OK $bycode = new ERR_CODE_410("err");
OK UNIVERSAL::isa($bycode, "ERR_GONE");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 410;
IS $bycode->name() => "GONE";
IS $bycode->msg()  => "ERR_GONE: err";
IS THROWS { die $bycode } => "ERR_GONE: err";

OK $err = new ERR_LENGTH_REQUIRED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 411;
IS $err->name() => "LENGTH_REQUIRED";
IS $err->msg()  => "ERR_LENGTH_REQUIRED: err";
IS THROWS { die $err } => "ERR_LENGTH_REQUIRED: err";
OK $bycode = new ERR_CODE_411("err");
OK UNIVERSAL::isa($bycode, "ERR_LENGTH_REQUIRED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 411;
IS $bycode->name() => "LENGTH_REQUIRED";
IS $bycode->msg()  => "ERR_LENGTH_REQUIRED: err";
IS THROWS { die $bycode } => "ERR_LENGTH_REQUIRED: err";

OK $err = new ERR_PRECONDITION_FAILED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 412;
IS $err->name() => "PRECONDITION_FAILED";
IS $err->msg()  => "ERR_PRECONDITION_FAILED: err";
IS THROWS { die $err } => "ERR_PRECONDITION_FAILED: err";
OK $bycode = new ERR_CODE_412("err");
OK UNIVERSAL::isa($bycode, "ERR_PRECONDITION_FAILED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 412;
IS $bycode->name() => "PRECONDITION_FAILED";
IS $bycode->msg()  => "ERR_PRECONDITION_FAILED: err";
IS THROWS { die $bycode } => "ERR_PRECONDITION_FAILED: err";

OK $err = new ERR_REQUEST_ENTITY_TOO_LARGE("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 413;
IS $err->name() => "REQUEST_ENTITY_TOO_LARGE";
IS $err->msg()  => "ERR_REQUEST_ENTITY_TOO_LARGE: err";
IS THROWS { die $err } => "ERR_REQUEST_ENTITY_TOO_LARGE: err";
OK $bycode = new ERR_CODE_413("err");
OK UNIVERSAL::isa($bycode, "ERR_REQUEST_ENTITY_TOO_LARGE");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 413;
IS $bycode->name() => "REQUEST_ENTITY_TOO_LARGE";
IS $bycode->msg()  => "ERR_REQUEST_ENTITY_TOO_LARGE: err";
IS THROWS { die $bycode } => "ERR_REQUEST_ENTITY_TOO_LARGE: err";

OK $err = new ERR_REQUEST_URI_TOO_LARGE("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 414;
IS $err->name() => "REQUEST_URI_TOO_LARGE";
IS $err->msg()  => "ERR_REQUEST_URI_TOO_LARGE: err";
IS THROWS { die $err } => "ERR_REQUEST_URI_TOO_LARGE: err";
OK $bycode = new ERR_CODE_414("err");
OK UNIVERSAL::isa($bycode, "ERR_REQUEST_URI_TOO_LARGE");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 414;
IS $bycode->name() => "REQUEST_URI_TOO_LARGE";
IS $bycode->msg()  => "ERR_REQUEST_URI_TOO_LARGE: err";
IS THROWS { die $bycode } => "ERR_REQUEST_URI_TOO_LARGE: err";

OK $err = new ERR_UNSUPPORTED_MEDIA_TYPE("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 415;
IS $err->name() => "UNSUPPORTED_MEDIA_TYPE";
IS $err->msg()  => "ERR_UNSUPPORTED_MEDIA_TYPE: err";
IS THROWS { die $err } => "ERR_UNSUPPORTED_MEDIA_TYPE: err";
OK $bycode = new ERR_CODE_415("err");
OK UNIVERSAL::isa($bycode, "ERR_UNSUPPORTED_MEDIA_TYPE");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 415;
IS $bycode->name() => "UNSUPPORTED_MEDIA_TYPE";
IS $bycode->msg()  => "ERR_UNSUPPORTED_MEDIA_TYPE: err";
IS THROWS { die $bycode } => "ERR_UNSUPPORTED_MEDIA_TYPE: err";

OK $err = new ERR_RANGE_NOT_SATISFIABLE("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 416;
IS $err->name() => "RANGE_NOT_SATISFIABLE";
IS $err->msg()  => "ERR_RANGE_NOT_SATISFIABLE: err";
IS THROWS { die $err } => "ERR_RANGE_NOT_SATISFIABLE: err";
OK $bycode = new ERR_CODE_416("err");
OK UNIVERSAL::isa($bycode, "ERR_RANGE_NOT_SATISFIABLE");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 416;
IS $bycode->name() => "RANGE_NOT_SATISFIABLE";
IS $bycode->msg()  => "ERR_RANGE_NOT_SATISFIABLE: err";
IS THROWS { die $bycode } => "ERR_RANGE_NOT_SATISFIABLE: err";

OK $err = new ERR_EXPECTATION_FAILED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 417;
IS $err->name() => "EXPECTATION_FAILED";
IS $err->msg()  => "ERR_EXPECTATION_FAILED: err";
IS THROWS { die $err } => "ERR_EXPECTATION_FAILED: err";
OK $bycode = new ERR_CODE_417("err");
OK UNIVERSAL::isa($bycode, "ERR_EXPECTATION_FAILED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 417;
IS $bycode->name() => "EXPECTATION_FAILED";
IS $bycode->msg()  => "ERR_EXPECTATION_FAILED: err";
IS THROWS { die $bycode } => "ERR_EXPECTATION_FAILED: err";

OK $err = new ERR_UNPROCESSABLE_ENTITY("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 422;
IS $err->name() => "UNPROCESSABLE_ENTITY";
IS $err->msg()  => "ERR_UNPROCESSABLE_ENTITY: err";
IS THROWS { die $err } => "ERR_UNPROCESSABLE_ENTITY: err";
OK $bycode = new ERR_CODE_422("err");
OK UNIVERSAL::isa($bycode, "ERR_UNPROCESSABLE_ENTITY");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 422;
IS $bycode->name() => "UNPROCESSABLE_ENTITY";
IS $bycode->msg()  => "ERR_UNPROCESSABLE_ENTITY: err";
IS THROWS { die $bycode } => "ERR_UNPROCESSABLE_ENTITY: err";

OK $err = new ERR_LOCKED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 423;
IS $err->name() => "LOCKED";
IS $err->msg()  => "ERR_LOCKED: err";
IS THROWS { die $err } => "ERR_LOCKED: err";
OK $bycode = new ERR_CODE_423("err");
OK UNIVERSAL::isa($bycode, "ERR_LOCKED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 423;
IS $bycode->name() => "LOCKED";
IS $bycode->msg()  => "ERR_LOCKED: err";
IS THROWS { die $bycode } => "ERR_LOCKED: err";

OK $err = new ERR_FAILED_DEPENDENCY("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 424;
IS $err->name() => "FAILED_DEPENDENCY";
IS $err->msg()  => "ERR_FAILED_DEPENDENCY: err";
IS THROWS { die $err } => "ERR_FAILED_DEPENDENCY: err";
OK $bycode = new ERR_CODE_424("err");
OK UNIVERSAL::isa($bycode, "ERR_FAILED_DEPENDENCY");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 424;
IS $bycode->name() => "FAILED_DEPENDENCY";
IS $bycode->msg()  => "ERR_FAILED_DEPENDENCY: err";
IS THROWS { die $bycode } => "ERR_FAILED_DEPENDENCY: err";

OK $err = new ERR_UPGRADE_REQUIRED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 426;
IS $err->name() => "UPGRADE_REQUIRED";
IS $err->msg()  => "ERR_UPGRADE_REQUIRED: err";
IS THROWS { die $err } => "ERR_UPGRADE_REQUIRED: err";
OK $bycode = new ERR_CODE_426("err");
OK UNIVERSAL::isa($bycode, "ERR_UPGRADE_REQUIRED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 426;
IS $bycode->name() => "UPGRADE_REQUIRED";
IS $bycode->msg()  => "ERR_UPGRADE_REQUIRED: err";
IS THROWS { die $bycode } => "ERR_UPGRADE_REQUIRED: err";

OK $err = new ERR_INTERNAL_SERVER_ERROR("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 500;
IS $err->name() => "INTERNAL_SERVER_ERROR";
IS $err->msg()  => "ERR_INTERNAL_SERVER_ERROR: err";
IS THROWS { die $err } => "ERR_INTERNAL_SERVER_ERROR: err";
OK $bycode = new ERR_CODE_500("err");
OK UNIVERSAL::isa($bycode, "ERR_INTERNAL_SERVER_ERROR");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 500;
IS $bycode->name() => "INTERNAL_SERVER_ERROR";
IS $bycode->msg()  => "ERR_INTERNAL_SERVER_ERROR: err";
IS THROWS { die $bycode } => "ERR_INTERNAL_SERVER_ERROR: err";

OK $err = new ERR_NOT_IMPLEMENTED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 501;
IS $err->name() => "NOT_IMPLEMENTED";
IS $err->msg()  => "ERR_NOT_IMPLEMENTED: err";
IS THROWS { die $err } => "ERR_NOT_IMPLEMENTED: err";
OK $bycode = new ERR_CODE_501("err");
OK UNIVERSAL::isa($bycode, "ERR_NOT_IMPLEMENTED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 501;
IS $bycode->name() => "NOT_IMPLEMENTED";
IS $bycode->msg()  => "ERR_NOT_IMPLEMENTED: err";
IS THROWS { die $bycode } => "ERR_NOT_IMPLEMENTED: err";

OK $err = new ERR_BAD_GATEWAY("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 502;
IS $err->name() => "BAD_GATEWAY";
IS $err->msg()  => "ERR_BAD_GATEWAY: err";
IS THROWS { die $err } => "ERR_BAD_GATEWAY: err";
OK $bycode = new ERR_CODE_502("err");
OK UNIVERSAL::isa($bycode, "ERR_BAD_GATEWAY");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 502;
IS $bycode->name() => "BAD_GATEWAY";
IS $bycode->msg()  => "ERR_BAD_GATEWAY: err";
IS THROWS { die $bycode } => "ERR_BAD_GATEWAY: err";

OK $err = new ERR_SERVICE_UNAVAILABLE("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 503;
IS $err->name() => "SERVICE_UNAVAILABLE";
IS $err->msg()  => "ERR_SERVICE_UNAVAILABLE: err";
IS THROWS { die $err } => "ERR_SERVICE_UNAVAILABLE: err";
OK $bycode = new ERR_CODE_503("err");
OK UNIVERSAL::isa($bycode, "ERR_SERVICE_UNAVAILABLE");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 503;
IS $bycode->name() => "SERVICE_UNAVAILABLE";
IS $bycode->msg()  => "ERR_SERVICE_UNAVAILABLE: err";
IS THROWS { die $bycode } => "ERR_SERVICE_UNAVAILABLE: err";

OK $err = new ERR_GATEWAY_TIME_OUT("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 504;
IS $err->name() => "GATEWAY_TIME_OUT";
IS $err->msg()  => "ERR_GATEWAY_TIME_OUT: err";
IS THROWS { die $err } => "ERR_GATEWAY_TIME_OUT: err";
OK $bycode = new ERR_CODE_504("err");
OK UNIVERSAL::isa($bycode, "ERR_GATEWAY_TIME_OUT");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 504;
IS $bycode->name() => "GATEWAY_TIME_OUT";
IS $bycode->msg()  => "ERR_GATEWAY_TIME_OUT: err";
IS THROWS { die $bycode } => "ERR_GATEWAY_TIME_OUT: err";

OK $err = new ERR_VERSION_NOT_SUPPORTED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 505;
IS $err->name() => "VERSION_NOT_SUPPORTED";
IS $err->msg()  => "ERR_VERSION_NOT_SUPPORTED: err";
IS THROWS { die $err } => "ERR_VERSION_NOT_SUPPORTED: err";
OK $bycode = new ERR_CODE_505("err");
OK UNIVERSAL::isa($bycode, "ERR_VERSION_NOT_SUPPORTED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 505;
IS $bycode->name() => "VERSION_NOT_SUPPORTED";
IS $bycode->msg()  => "ERR_VERSION_NOT_SUPPORTED: err";
IS THROWS { die $bycode } => "ERR_VERSION_NOT_SUPPORTED: err";

OK $err = new ERR_VARIANT_ALSO_VARIES("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 506;
IS $err->name() => "VARIANT_ALSO_VARIES";
IS $err->msg()  => "ERR_VARIANT_ALSO_VARIES: err";
IS THROWS { die $err } => "ERR_VARIANT_ALSO_VARIES: err";
OK $bycode = new ERR_CODE_506("err");
OK UNIVERSAL::isa($bycode, "ERR_VARIANT_ALSO_VARIES");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 506;
IS $bycode->name() => "VARIANT_ALSO_VARIES";
IS $bycode->msg()  => "ERR_VARIANT_ALSO_VARIES: err";
IS THROWS { die $bycode } => "ERR_VARIANT_ALSO_VARIES: err";

OK $err = new ERR_INSUFFICIENT_STORAGE("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 507;
IS $err->name() => "INSUFFICIENT_STORAGE";
IS $err->msg()  => "ERR_INSUFFICIENT_STORAGE: err";
IS THROWS { die $err } => "ERR_INSUFFICIENT_STORAGE: err";
OK $bycode = new ERR_CODE_507("err");
OK UNIVERSAL::isa($bycode, "ERR_INSUFFICIENT_STORAGE");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 507;
IS $bycode->name() => "INSUFFICIENT_STORAGE";
IS $bycode->msg()  => "ERR_INSUFFICIENT_STORAGE: err";
IS THROWS { die $bycode } => "ERR_INSUFFICIENT_STORAGE: err";

OK $err = new ERR_NOT_EXTENDED("err");
OK UNIVERSAL::isa($err, "Gearbox::Error");
IS $err->code() => 510;
IS $err->name() => "NOT_EXTENDED";
IS $err->msg()  => "ERR_NOT_EXTENDED: err";
IS THROWS { die $err } => "ERR_NOT_EXTENDED: err";
OK $bycode = new ERR_CODE_510("err");
OK UNIVERSAL::isa($bycode, "ERR_NOT_EXTENDED");
OK UNIVERSAL::isa($bycode, "Gearbox::Error");
IS $bycode->code() => 510;
IS $bycode->name() => "NOT_EXTENDED";
IS $bycode->msg()  => "ERR_NOT_EXTENDED: err";
IS THROWS { die $bycode } => "ERR_NOT_EXTENDED: err";

